library(dplyr)
library(tidyr)
library(stringr)
library(ggplot2)
total <- select(pizza, publication_numbers, publication_year)
total <- select(pizza, publication_number, publication_year)
total
total <-
select(pizza, publication_number, publication_year) %>%
mutate(n = sum(publication_number = 1) %>%
count(publication_year, wt = n) %>%
rename("pubyear" = publication_year, publications = n)
fqiyd;wcw
total <-
select(pizza, publication_number, publication_year) %>%
mutate(n = sum(publication_number = 1) %>%
count(publication_year, wt = n) %>%
rename("pubyear" = publication_year, publications = n)
print(total)
total <-
select(pizza, publication_number, publication_year) %>%
mutate(n = sum(publication_number = 1) %>%
count(publication_year, wt = n) %>%
rename(pubyear = publication_year, publications = n)
print(total)
total <-
select(pizza, publication_number, publication_year) %>%
mutate(n = sum(publication_number = 1) %>%
count(publication_year, wt = n) %>%
rename("pubyear" = publication_year, publications = n)
)
select(pizza, publication_number, publication_year) %>%
)
select(pizza, publication_number, publication_year)
mutate(n = sum(publication_number = 1)
)
ls
total <- select(pizza, publication_number, publication_year)
total <- mutate(total, n = sum(publication_number = 1)
sdicghkw;
rm(total)
total <- select(pizza, publication_number, publication_year)
total <- mutate(total, n = sum(publication_number = 1))
total <- count(publication_year, wt = n)
total <- count(pizza, publication_year, wt = n)
View(total)
total <- count(pizza, publication_year, wt = n)
total <- count(pizza, publication_year, wt = "n")
total <- count(total, publication_year, wt = n)
total <- rename(total, "pubyear" = publication_year, publications = n)
View(total)
rm(total)
total <- select(pizza, publication_number, publication_year) %>%
mutate(n = sum(publication_number = 1)) %>%
count(publication_year, wt = n) %>%
rename("pubyear" = publication_year, publications = n)
View(total)
rm(total)
total <- select(pizza, publication_number, publication_year)
total <- mutate(total, n = sum(publication_number = 1))
total <- count(total, publication_year, wt = n)
total <- rename(total, "pubyear" = publication_year, publications = n)
total
View(pizza)
install.packages("rgbif")
library(rgbif)
name_lookup(query='mammalia')
out <- name_lookup('Helianthus annuus', rank="species", verbose=TRUE)
name_lookup(query='Cnaemidophorus', rank="genus", return="data")
install.packages("rplos")
library("rplos", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
df_species <- occ_search(scientificName = df, fields=c('kingdom', 'family'), limit = 1)
library(rgbif)
df_species <- occ_search(scientificName = df, fields=c('kingdom', 'family'), limit = 1)
kenya <- read_excel("/Users/pauloldham17inch/Desktop/GIZ\ Africa/Kenya/Kenya_workbook_01082015.xlsx")
iris
iris.df$row <- 1:nrow(iris.df)
iris.df <- as.data.frame(iris)
View(iris.df)
iris.df$row <- 1:nrow(iris.df)
install.packages("rlist")
library(rlist)
x <- list(p1 = list(type='A',score=list(c1=10,c2=8)),
p2 = list(type='B',score=list(c1=9,c2=9)),
p3 = list(type='B',score=list(c1=9,c2=7)))
xg <- list.group(x, type)
xg
x
rm(x, xg)
x <- list(p1 = list(type='A',score=list(c1=10,c2=8)),
p2 = list(type='B',score=list(c1=9,c2=9)),
p3 = list(type='B',score=list(c1=9,c2=7)))
x
xg <- list.group(x, type)
xg
list.ungroup(xg)
list.ungroup(x, level = 1)
list.ungroup(x, level = 2)
list.ungroup(x, level = 2, group.names = TRUE)
install.packages(c("fulltext", "Hmisc", "rgbif", "taxize"))
res <- ft_search(query='ecology', from=c('plos','crossref','arxiv')))
res$plos
library(fulltext)
res <- ft_search(query='ecology', from=c('plos','crossref','arxiv')))
res$plos
res <- ft_search(query='ecology', from=c('plos','crossref','arxiv')))
res <- ft_search(query='ecology', from=c('plos','crossref','arxiv'))
res$plos
res$bmc
res$crossref
res$arxiv
res$biorxiv
library(stringr)
s <-  "
Day after day, day after day,
We stuck, nor breath nor motion;
"
s
m <- str_match_all( s, "\\S+" )
m
length(m[[1]])
m <- str_match_all( s, "\\;+" )
m
length(m[[1]])
library("ngram", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages("checkpoint")
library(magrittr)
iris %$%
Species %>%
levels
library(stringr)
iris %$%
Species
iris %$%
Species %>%
str_trim(side = "both")
install.packages(c("plotly", "rgbif"))
library(plyr)
library(dplyr)
library(RCurl)
library(httr)
library(tidyr)
library(jsonlite)
library(readr)
library(rlist)
?complete
df <- data_frame(
group = c(1:2, 1),
item_id = c(1:2, 2),
item_name = c("a", "b", "b"),
value1 = 1:3,
value2 = 4:6
)
df
df %>% complete(group, c(item_id, item_name))
df %>% complete(group, c(item_id, item_name), fill = list(value1 = 0))
rm(df)
library(reshape2)
melt.list()
install.packages(c("jsonlite", "lubridate", "maps", "maptools", "R.utils"))
install.packages(c("ggthemes", "Hmisc", "plotly"))
install.packages("R.cache")
library(swirl)
install_course_directory()
swirl()
install_course_directory("Writing_swirl_courses")
install_course_directory(Writing_swirl_courses)
swirl()
viewinfo()
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
install_from_swirl("Writing_swirl_Courses")
swirl()
install_from_swirl("ErrFind")
x <- 4L
class(x)
x <- c(4, TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x, y)
y <- cbind(x, y)
class(y)
str(y)
x <- list(2, "a", "b", TRUE)
x
y[[2]]
x[[2]]
class(x[[2]])
x <- 1:4
y <- 2
x + y
x <- c(17, 14, 4, 5, 13, 12, 10)
x
x[x > 10] <- 4
x
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x == 10] <- 4
x
x <- c(17, 14, 4, 5, 13, 12, 10)
library(readr)
library(swirl)
install.packages("knitr")
install.packages("rmarkdown")
install.packages("devtools")
install.packages("plyr")
install.packages("dplyr")
install.packages("tidyr")
install.packages("stringr")
install.packages("readr")
install.packages("ggplot2")
install.packages("readxl")
install.packages("jsonlite")
install.packages("XML")
install.packages("xml2")
install.packages("plotly")
library(dplyr)
load("~/.RData")
tapply(flags$animate, flags$landmass, mean)
data(flags)
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
resultsrapply
resultsrapply <- rapply(results, as.character, classes = "character", deflt = as.integer(NA, how = "unlist")) %>%
ldply()
library(plyr)
library(stringr)
library(dplyr)
library(tidyr)
results <- postcontent$`ops:world-patent-data`$`exchange-documents` #get content
setwd("/Users/pauloldham17inch/poldham.github.io")
library(knitr)
my.jekyll.site <- "/Users/pauloldham17inch/poldham.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
KnitPost("/Users/pauloldham17inch/poldham.github.io/2016-02-26-lens.Rmd")
