View(r1)
r11 <- mutate(r1, percent = total / sum(total)*(100))
View(r11)
r2 <- select(rizza, pubcountry, pubcode, total)
r11 <- mutate(r2, percent = total / sum(total)*(100))
View(r11)
View(r2)
r21 <- count(rizza, pubcountry, pubcode, wt = total, sort = TRUE)
View(r21)
r11 <- mutate(r21, percent = n / sum(n)*(100))
View(r11)
r1 <- select(rizza, pubcountry, pubcode, pubyear, total)
View(r11)
class(rizza)
View(r21)
r11 <- mutate(r21, summarise(percent = n / sum(n)*(100)))
r11 <- mutate(r21, summarise(r21, percent = n / sum(n)*(100)))
View(r21)
summarise(mtcars, mean(disp))
summarise(group_by(mtcars, cyl), mean(disp))
summarise(rizza, total)
summarise(r1, total)
str(r2)
sum(b < 7)
b <- c(7, 2, 4, 3, -1, -2, 3, 3, 6, 8, 12, 7, 3)
sum(b < 7)
P7 <- 100 * length(which(b == 7)) / length(b)
P7
count3 <- length(which(b == 3)
)
count3
perc <- function(x, n){ 100*length((which(x == n))) / length(x) }
perc(b, 4)
ce <- ddply(cabbage_exp, "Date", transform, percent_weight = Weight /sum(Weight) * 100)
library("gcookbook", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
ce <- ddply(cabbage_exp, "Date", transform, percent_weight = Weight /sum(Weight) * 100)
ce
str(ce)
View(r2)
View(r3)
ce <- ddply(r3, "pubcountry", transform, percent_weight = n /sum(n) * 100)
r11 <- mutate(r21, summarise(r21, percent = n / colSums(n)*(100)))
aggregate(presidents, nfrequency = 1, FUN = mean)
r11 <- mutate(r21, weight = prop.table(r21$n)
)
r11$percent <- prop.table(r21$n)
r11$percent
r12$percent <- rll$n / sum(r11$n)
r12$percent <- r11$n / sum(r11$n)
bugger <- r11$n / sum(r11$n)
bugger
bugger <- r11$n / sum(r11$n) * 100
r11 <- mutate(r21, summarise(r21, percent = n / sum(r21$n)*(100)))
r11 <- mutate(r21, summarise(r21, percent = n / summarise(n)*(100)))
View(r3)
ce <- ddply(r3, "pubcountry", transform, percent_weight = n /sum(n) * 100)
View(ce)
install.packages(c("ggthemes", "rplos", "stringi"))
load("/Users/pauloldham17inch/opensource-patent-analytics/4_analysing_patent_data/ggplot/ggplot_pizza_patents_part208072015.Rdata")
library("readr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
mada <- read_csv("/Users/pauloldham17inch/Desktop/GBIF\ Madagascar/0007679-150615163101818.csv")
read_tsv("/Users/pauloldham17inch/Desktop/GBIF\ Madagascar/0007679-150615163101818.csv")
problems()
mada <- read_tsv("/Users/pauloldham17inch/Desktop/GBIF\ Madagascar/0007679-150615163101818.csv")
str(mada)
View(mada)
mada1 <- select(mada, gbifid, kingdom, phylum, class, order, family, species, taxonrank, scientificname, countrycode, locality, decimallatitude, decimallongitude, elevation, depth, specieskey)
View(mada1)
arrange(mada1, taxonrank)
arrange(mada1, desc(taxonrank))
mada1
View(mada1)
write_csv(mada1, "madaselect.csv")
madataxon <- select(mada1, taxonrank)
View(madataxon)
str(mada1)
str(madataxon)
summarise(madataxon)
summary(madataxon)
problems(...)
problems(mada)
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages("reshape2")
library("reshape2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
a <- as.list(c(1:4, NA))
a
melt(a)
names(a) <- letters[1:4]
names(a)
melt(a)
install.packages("boot")
install.packages("ggplot2")
library(tidyr)
library(tidyr)
library(dplyr)
library(readr)
install.packages("rbhl")
library("rbhl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
bhl_booksearch(title='Selborne', lname='White', volume=2, edition='new', year=1825,
collectionid=4, language='eng')
bhl_booksearch(title='Selborne', lname='White', volume=2, edition='new', year=1825,
collectionid=4, language='eng')
swirl()
library(swirl)
swirl()
2
2
swirl()
bye()
swirl()
read.csv(path2csv, stringAsFactor = FALSE)
read.csv(path2csv, stringAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim()
dim(mydf)
head()
head(mydf)
library(dplyr)
package_version("dplyr")
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
"-5:20"
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version == "3.0.2", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size >= 100500, r_os == "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, r_version == !is.na(r_version))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mn / 2^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
1
swirl()
2
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package(cran, package)
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
?n
?n_distinct
pack_sum <- summarize(by_package,
count = n(),
unique = n_distinct(ip_id),
countries = n_distinct(countries),
avg_bytes = mean(size))
source('/var/folders/lz/xwyq8xyn1xz22srmd74cn1l40000gq/T//RtmpT7whXL/summarize1.R')
source('/var/folders/lz/xwyq8xyn1xz22srmd74cn1l40000gq/T//RtmpT7whXL/summarize1.R')
source('/var/folders/lz/xwyq8xyn1xz22srmd74cn1l40000gq/T//RtmpT7whXL/summarize1.R')
pack_sum
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
filter(pack_sum, count > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_count, count)
top_counts_sorted <- arrange(top_counts, count)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View()
View(top_unique)
arrange(top_unique, unique)
top_unique_sorted <- arrange(top_unique, unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
source('/var/folders/lz/xwyq8xyn1xz22srmd74cn1l40000gq/T//RtmpT7whXL/chain1.R')
submit()
submit()
submit()
source('/var/folders/lz/xwyq8xyn1xz22srmd74cn1l40000gq/T//RtmpT7whXL/chain2.R')
source('/var/folders/lz/xwyq8xyn1xz22srmd74cn1l40000gq/T//RtmpT7whXL/chain2.R')
submit()
source('/var/folders/lz/xwyq8xyn1xz22srmd74cn1l40000gq/T//RtmpT7whXL/chain3.R')
submit()
submit()
library(tidyr)
students
?gather
gather(students, students, sex, count, - grade)
students
gather(students, sex, count, -grade)
students2
gather(students2, res, sex_class, count)
res <- gather(students2, res, sex_class, count)
skip()
res
?separate
separate(res, sex_class, c(sex, class))
separate(res, sex_class, c("sex", "class"))
source('/var/folders/lz/xwyq8xyn1xz22srmd74cn1l40000gq/T//RtmpT7whXL/script1.R')
submit()
students3
submit()
source('/var/folders/lz/xwyq8xyn1xz22srmd74cn1l40000gq/T//RtmpT7whXL/script2.R')
submit()
?spread
source('/var/folders/lz/xwyq8xyn1xz22srmd74cn1l40000gq/T//RtmpT7whXL/script3.R')
submit()
extract_numeric("class5")
?mutate
source('/var/folders/lz/xwyq8xyn1xz22srmd74cn1l40000gq/T//RtmpT7whXL/script4.R')
submit()
students4
submit()
source('/var/folders/lz/xwyq8xyn1xz22srmd74cn1l40000gq/T//RtmpT7whXL/script6.R')
submit()
source('/var/folders/lz/xwyq8xyn1xz22srmd74cn1l40000gq/T//RtmpT7whXL/script7.R')
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
bind_rows(passed, failed)
sat
?contains
?contains()
source('/var/folders/lz/xwyq8xyn1xz22srmd74cn1l40000gq/T//RtmpT7whXL/script8.R')
bye()
install.packages(c("gdata", "Matrix", "rgbif"))
library("rgbif", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("readr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
read_csv("/Users/pauloldham17inch/Desktop/GIZ\ Africa/South\ Africa/southafrica_tk_species.csv")
tk <- read_csv("/Users/pauloldham17inch/Desktop/GIZ\ Africa/South\ Africa/southafrica_tk_species.csv")
rm(tk)
tk <- read_csv("/Users/pauloldham17inch/Desktop/GIZ\ Africa/South\ Africa/southafrica_tk_species.csv")
problems()
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("readr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
tk <- read_csv("/Users/pauloldham17inch/Desktop/GIZ\ Africa/South\ Africa/southafrica_tk_species.csv")
View(tk)
gather(tk, kingdom, count, 4:13)
tk <- gather(tk, kingdom, count, 4:13)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
tk <- select(tk, 1:4)
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
join <- select(join, id, applicants_orgs_all, publication_number) ##now have shared ids in tables nodes and edges. Then create a matrix on the ids
library(plyr)
library(dplyr)
library(tidyr)
library(readr)
library(rgexf)
join <- select(join, id, applicants_orgs_all, publication_number) ##now have shared ids in tables nodes and edges. Then create a matrix on the ids
applicants <- read.csv("/Users/pauloldham17inch/opensource-patent-analytics/2_datasets/pizza_medium_clean/applicants_matrix.csv", header = TRUE, stringsAsFactors = FALSE)
applicants <- select(applicants, applicants_orgs_all, publication_number)
nodes <- count(applicants, applicants_orgs_all, wt = NULL, sort = FALSE) ## select individual names
nodes$id <- 1:2008 ## add an id for each name
View(nodes)
join <- left_join(applicants, nodes) ##joins on applicant orgs all
join <- select(join, id, applicants_orgs_all, publication_number) ##now have shared ids in tables nodes and edges. Then create a matrix on the ids
View(join)
matrix <- crossprod(table(join[2:1]))
View(matrix)
attributes(matrix)
diag(matrix) <- 0
matrixdf <- as.data.frame(matrix)
View(matrixdf)
gather(matrixdf, n, target)
gather(matrixdf, n, target, 1:2008)
matrixdf2 <- gather(matrixdf, n, target, 1:2008)
View(matrixdf2)
filter(matrixdf2, target == >0)
install.packages("Matrix")
library(Matrix)
nnzero(matrixdf)
matrixdf <- as.data.frame(matrix)
pubno <- select(join, publication_number)
pubno$targetid <- 1:6592
View(pubno)
join1 <- left_join(join, pubno)
View(join1)
demo(edge.list)
View(applicants)
relations <- matrix(c("Juan","Carlos",
+                       "Juan","Pedro",
+                       "Juan","Matthew",
+                       "Pedro","Matthew",
+                       "Matthew","Carlos",
+                       "Carlos","Pedro",
+                       "Pedro","Carlos",
+                       "Carlos","Juan",
+                       "Carlos","Juan"),
+                     ncol=2, byrow=T)
edgelist <- matrix(
c("matthew","john",
"max","stephen",
"matthew","stephen"),
byrow=TRUE, ncol=2)
edge.list(edgelist)
View(matrix)
edges <- edge.list(matrixdf)
edges <- edge.list(matrix)
View(applicants)
applicants <- read.csv("/Users/pauloldham17inch/opensource-patent-analytics/2_datasets/pizza_medium_clean/applicants_matrix.csv", header = TRUE, stringsAsFactors = FALSE)
View(applicants)
applicants <- select(applicants, applicants_orgs_all, applicants_orgs_all_1)
edge.list(applicants)
edges <- edge.list(applicants)
View(edges)
edges
str(edges)
View(applicants)
nodes <- edges$nodes
nodes <- edges$nodes
nodes
edges <- edges$edges
edges
demo(gexf)
test <- write.gexf(nodes = nodes, edges = edges)
write.gexf(nodes = nodes, edges = edges)
View(nodes)
View(edges)
View(edges)
as.matrix(edges)
matrixedges <- as.matrix(edges)
View(matrixedges)
applicants <- read.csv("/Users/pauloldham17inch/opensource-patent-analytics/2_datasets/pizza_medium_clean/applicants_matrix.csv", header = TRUE, stringsAsFactors = FALSE)
applicants <- select(applicants, applicants_orgs_all, publication_number)
nodes <- count(applicants, applicants_orgs_all, wt = NULL, sort = FALSE) ## select individual names
nodes$id <- 1:2008 ## add an id for each name
join <- left_join(applicants, nodes) ##joins on applicant orgs all
join <- select(join, id, applicants_orgs_all, publication_number) ##now have shared ids in tables nodes and edges. Then create a matrix on the ids
View(join)
matrix <- crossprod(table(join[2:1]))
View(matrix)
diag(matrix) <- 0
View(matrix)
View(matrix)
matrixdf <- as.data.frame(matrix)
View(matrixdf)
edges <- gather(matrixdf, target, weight, 1:2008) ##that works OK. BUT HOW DO I NAME THE DIMENSIONS AS SOURCE AND TARGET WITH AN ID FIELD?
View(edges)
library("readr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
pizza <- read_csv("/Users/pauloldham17inch/opensource-patent-analytics/2_datasets/pizza_medium_clean/pizza.csv")
library(readr)
library(dplyr)
library(tidyr)
library(stringr)
library(ggplot2)
total <- select(pizza, publication_numbers, publication_year)
total <- select(pizza, publication_number, publication_year)
total
total <-
select(pizza, publication_number, publication_year) %>%
mutate(n = sum(publication_number = 1) %>%
count(publication_year, wt = n) %>%
rename("pubyear" = publication_year, publications = n)
fqiyd;wcw
total <-
select(pizza, publication_number, publication_year) %>%
mutate(n = sum(publication_number = 1) %>%
count(publication_year, wt = n) %>%
rename("pubyear" = publication_year, publications = n)
print(total)
total <-
select(pizza, publication_number, publication_year) %>%
mutate(n = sum(publication_number = 1) %>%
count(publication_year, wt = n) %>%
rename(pubyear = publication_year, publications = n)
print(total)
total <-
select(pizza, publication_number, publication_year) %>%
mutate(n = sum(publication_number = 1) %>%
count(publication_year, wt = n) %>%
rename("pubyear" = publication_year, publications = n)
)
select(pizza, publication_number, publication_year) %>%
)
select(pizza, publication_number, publication_year)
mutate(n = sum(publication_number = 1)
)
ls
total <- select(pizza, publication_number, publication_year)
total <- mutate(total, n = sum(publication_number = 1)
sdicghkw;
rm(total)
total <- select(pizza, publication_number, publication_year)
total <- mutate(total, n = sum(publication_number = 1))
total <- count(publication_year, wt = n)
total <- count(pizza, publication_year, wt = n)
View(total)
total <- count(pizza, publication_year, wt = n)
total <- count(pizza, publication_year, wt = "n")
total <- count(total, publication_year, wt = n)
total <- rename(total, "pubyear" = publication_year, publications = n)
View(total)
rm(total)
total <- select(pizza, publication_number, publication_year) %>%
mutate(n = sum(publication_number = 1)) %>%
count(publication_year, wt = n) %>%
rename("pubyear" = publication_year, publications = n)
View(total)
rm(total)
total <- select(pizza, publication_number, publication_year)
total <- mutate(total, n = sum(publication_number = 1))
total <- count(total, publication_year, wt = n)
total <- rename(total, "pubyear" = publication_year, publications = n)
total
View(pizza)
install.packages("rgbif")
library(rgbif)
name_lookup(query='mammalia')
out <- name_lookup('Helianthus annuus', rank="species", verbose=TRUE)
name_lookup(query='Cnaemidophorus', rank="genus", return="data")
install.packages("rplos")
library("rplos", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
df_species <- occ_search(scientificName = df, fields=c('kingdom', 'family'), limit = 1)
library(rgbif)
df_species <- occ_search(scientificName = df, fields=c('kingdom', 'family'), limit = 1)
kenya <- read_excel("/Users/pauloldham17inch/Desktop/GIZ\ Africa/Kenya/Kenya_workbook_01082015.xlsx")
iris
iris.df$row <- 1:nrow(iris.df)
iris.df <- as.data.frame(iris)
View(iris.df)
iris.df$row <- 1:nrow(iris.df)
install.packages("rlist")
library(rlist)
x <- list(p1 = list(type='A',score=list(c1=10,c2=8)),
p2 = list(type='B',score=list(c1=9,c2=9)),
p3 = list(type='B',score=list(c1=9,c2=7)))
xg <- list.group(x, type)
xg
x
rm(x, xg)
x <- list(p1 = list(type='A',score=list(c1=10,c2=8)),
p2 = list(type='B',score=list(c1=9,c2=9)),
p3 = list(type='B',score=list(c1=9,c2=7)))
x
xg <- list.group(x, type)
xg
list.ungroup(xg)
list.ungroup(x, level = 1)
list.ungroup(x, level = 2)
list.ungroup(x, level = 2, group.names = TRUE)
install.packages(c("fulltext", "Hmisc", "rgbif", "taxize"))
res <- ft_search(query='ecology', from=c('plos','crossref','arxiv')))
res$plos
library(fulltext)
res <- ft_search(query='ecology', from=c('plos','crossref','arxiv')))
res$plos
res <- ft_search(query='ecology', from=c('plos','crossref','arxiv')))
res <- ft_search(query='ecology', from=c('plos','crossref','arxiv'))
res$plos
res$bmc
res$crossref
res$arxiv
res$biorxiv
library(stringr)
s <-  "
Day after day, day after day,
We stuck, nor breath nor motion;
"
s
m <- str_match_all( s, "\\S+" )
m
length(m[[1]])
m <- str_match_all( s, "\\;+" )
m
length(m[[1]])
library("ngram", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
source('~/poldham.github.io/Myjekyllsite.R')
KnitPost("/Users/pauloldham17inch/poldham.github.io/_site/2015-10-27-rplos-walkthrough.Rmd")
getwd()
setwd("/Users/pauloldham17inch/poldham.github.io")
KnitPost("/Users/pauloldham17inch/poldham.github.io/_site/2015-10-27-rplos-walkthrough.Rmd")
getwd()
KnitPost("/Users/pauloldham17inch/poldham.github.io/2015-10-27-rplos-walkthrough.Rmd")
KnitPost("/Users/pauloldham17inch/poldham.github.io/2015-10-27-rplos-walkthrough.Rmd")
KnitPost("/Users/pauloldham17inch/poldham.github.io/2015-10-27-rplos-walkthrough.Rmd")
