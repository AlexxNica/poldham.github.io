?contains
?contains()
source('/var/folders/lz/xwyq8xyn1xz22srmd74cn1l40000gq/T//RtmpT7whXL/script8.R')
bye()
install.packages(c("gdata", "Matrix", "rgbif"))
library("rgbif", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("readr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
read_csv("/Users/pauloldham17inch/Desktop/GIZ\ Africa/South\ Africa/southafrica_tk_species.csv")
tk <- read_csv("/Users/pauloldham17inch/Desktop/GIZ\ Africa/South\ Africa/southafrica_tk_species.csv")
rm(tk)
tk <- read_csv("/Users/pauloldham17inch/Desktop/GIZ\ Africa/South\ Africa/southafrica_tk_species.csv")
problems()
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("readr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
tk <- read_csv("/Users/pauloldham17inch/Desktop/GIZ\ Africa/South\ Africa/southafrica_tk_species.csv")
View(tk)
gather(tk, kingdom, count, 4:13)
tk <- gather(tk, kingdom, count, 4:13)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
tk <- select(tk, 1:4)
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
join <- select(join, id, applicants_orgs_all, publication_number) ##now have shared ids in tables nodes and edges. Then create a matrix on the ids
library(plyr)
library(dplyr)
library(tidyr)
library(readr)
library(rgexf)
join <- select(join, id, applicants_orgs_all, publication_number) ##now have shared ids in tables nodes and edges. Then create a matrix on the ids
applicants <- read.csv("/Users/pauloldham17inch/opensource-patent-analytics/2_datasets/pizza_medium_clean/applicants_matrix.csv", header = TRUE, stringsAsFactors = FALSE)
applicants <- select(applicants, applicants_orgs_all, publication_number)
nodes <- count(applicants, applicants_orgs_all, wt = NULL, sort = FALSE) ## select individual names
nodes$id <- 1:2008 ## add an id for each name
View(nodes)
join <- left_join(applicants, nodes) ##joins on applicant orgs all
join <- select(join, id, applicants_orgs_all, publication_number) ##now have shared ids in tables nodes and edges. Then create a matrix on the ids
View(join)
matrix <- crossprod(table(join[2:1]))
View(matrix)
attributes(matrix)
diag(matrix) <- 0
matrixdf <- as.data.frame(matrix)
View(matrixdf)
gather(matrixdf, n, target)
gather(matrixdf, n, target, 1:2008)
matrixdf2 <- gather(matrixdf, n, target, 1:2008)
View(matrixdf2)
filter(matrixdf2, target == >0)
install.packages("Matrix")
library(Matrix)
nnzero(matrixdf)
matrixdf <- as.data.frame(matrix)
pubno <- select(join, publication_number)
pubno$targetid <- 1:6592
View(pubno)
join1 <- left_join(join, pubno)
View(join1)
demo(edge.list)
View(applicants)
relations <- matrix(c("Juan","Carlos",
+                       "Juan","Pedro",
+                       "Juan","Matthew",
+                       "Pedro","Matthew",
+                       "Matthew","Carlos",
+                       "Carlos","Pedro",
+                       "Pedro","Carlos",
+                       "Carlos","Juan",
+                       "Carlos","Juan"),
+                     ncol=2, byrow=T)
edgelist <- matrix(
c("matthew","john",
"max","stephen",
"matthew","stephen"),
byrow=TRUE, ncol=2)
edge.list(edgelist)
View(matrix)
edges <- edge.list(matrixdf)
edges <- edge.list(matrix)
View(applicants)
applicants <- read.csv("/Users/pauloldham17inch/opensource-patent-analytics/2_datasets/pizza_medium_clean/applicants_matrix.csv", header = TRUE, stringsAsFactors = FALSE)
View(applicants)
applicants <- select(applicants, applicants_orgs_all, applicants_orgs_all_1)
edge.list(applicants)
edges <- edge.list(applicants)
View(edges)
edges
str(edges)
View(applicants)
nodes <- edges$nodes
nodes
edges <- edges$edges
edges
demo(gexf)
test <- write.gexf(nodes = nodes, edges = edges)
write.gexf(nodes = nodes, edges = edges)
View(nodes)
View(edges)
as.matrix(edges)
matrixedges <- as.matrix(edges)
View(matrixedges)
applicants <- read.csv("/Users/pauloldham17inch/opensource-patent-analytics/2_datasets/pizza_medium_clean/applicants_matrix.csv", header = TRUE, stringsAsFactors = FALSE)
applicants <- select(applicants, applicants_orgs_all, publication_number)
nodes <- count(applicants, applicants_orgs_all, wt = NULL, sort = FALSE) ## select individual names
nodes$id <- 1:2008 ## add an id for each name
join <- left_join(applicants, nodes) ##joins on applicant orgs all
join <- select(join, id, applicants_orgs_all, publication_number) ##now have shared ids in tables nodes and edges. Then create a matrix on the ids
View(join)
matrix <- crossprod(table(join[2:1]))
View(matrix)
diag(matrix) <- 0
View(matrix)
matrixdf <- as.data.frame(matrix)
View(matrixdf)
edges <- gather(matrixdf, target, weight, 1:2008) ##that works OK. BUT HOW DO I NAME THE DIMENSIONS AS SOURCE AND TARGET WITH AN ID FIELD?
View(edges)
library("readr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
pizza <- read_csv("/Users/pauloldham17inch/opensource-patent-analytics/2_datasets/pizza_medium_clean/pizza.csv")
library(readr)
library(dplyr)
library(tidyr)
library(stringr)
library(ggplot2)
total <- select(pizza, publication_numbers, publication_year)
total <- select(pizza, publication_number, publication_year)
total
total <-
select(pizza, publication_number, publication_year) %>%
mutate(n = sum(publication_number = 1) %>%
count(publication_year, wt = n) %>%
rename("pubyear" = publication_year, publications = n)
fqiyd;wcw
total <-
select(pizza, publication_number, publication_year) %>%
mutate(n = sum(publication_number = 1) %>%
count(publication_year, wt = n) %>%
rename("pubyear" = publication_year, publications = n)
print(total)
total <-
select(pizza, publication_number, publication_year) %>%
mutate(n = sum(publication_number = 1) %>%
count(publication_year, wt = n) %>%
rename(pubyear = publication_year, publications = n)
print(total)
total <-
select(pizza, publication_number, publication_year) %>%
mutate(n = sum(publication_number = 1) %>%
count(publication_year, wt = n) %>%
rename("pubyear" = publication_year, publications = n)
)
select(pizza, publication_number, publication_year) %>%
)
select(pizza, publication_number, publication_year)
mutate(n = sum(publication_number = 1)
)
ls
total <- select(pizza, publication_number, publication_year)
total <- mutate(total, n = sum(publication_number = 1)
sdicghkw;
rm(total)
total <- select(pizza, publication_number, publication_year)
total <- mutate(total, n = sum(publication_number = 1))
total <- count(publication_year, wt = n)
total <- count(pizza, publication_year, wt = n)
View(total)
total <- count(pizza, publication_year, wt = n)
total <- count(pizza, publication_year, wt = "n")
total <- count(total, publication_year, wt = n)
total <- rename(total, "pubyear" = publication_year, publications = n)
View(total)
rm(total)
total <- select(pizza, publication_number, publication_year) %>%
mutate(n = sum(publication_number = 1)) %>%
count(publication_year, wt = n) %>%
rename("pubyear" = publication_year, publications = n)
View(total)
rm(total)
total <- select(pizza, publication_number, publication_year)
total <- mutate(total, n = sum(publication_number = 1))
total <- count(total, publication_year, wt = n)
total <- rename(total, "pubyear" = publication_year, publications = n)
total
View(pizza)
install.packages("rgbif")
library(rgbif)
name_lookup(query='mammalia')
out <- name_lookup('Helianthus annuus', rank="species", verbose=TRUE)
name_lookup(query='Cnaemidophorus', rank="genus", return="data")
install.packages("rplos")
library("rplos", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
df_species <- occ_search(scientificName = df, fields=c('kingdom', 'family'), limit = 1)
library(rgbif)
df_species <- occ_search(scientificName = df, fields=c('kingdom', 'family'), limit = 1)
kenya <- read_excel("/Users/pauloldham17inch/Desktop/GIZ\ Africa/Kenya/Kenya_workbook_01082015.xlsx")
iris
iris.df$row <- 1:nrow(iris.df)
iris.df <- as.data.frame(iris)
View(iris.df)
iris.df$row <- 1:nrow(iris.df)
install.packages("rlist")
library(rlist)
x <- list(p1 = list(type='A',score=list(c1=10,c2=8)),
p2 = list(type='B',score=list(c1=9,c2=9)),
p3 = list(type='B',score=list(c1=9,c2=7)))
xg <- list.group(x, type)
xg
x
rm(x, xg)
x <- list(p1 = list(type='A',score=list(c1=10,c2=8)),
p2 = list(type='B',score=list(c1=9,c2=9)),
p3 = list(type='B',score=list(c1=9,c2=7)))
x
xg <- list.group(x, type)
xg
list.ungroup(xg)
list.ungroup(x, level = 1)
list.ungroup(x, level = 2)
list.ungroup(x, level = 2, group.names = TRUE)
install.packages(c("fulltext", "Hmisc", "rgbif", "taxize"))
res <- ft_search(query='ecology', from=c('plos','crossref','arxiv')))
res$plos
library(fulltext)
res <- ft_search(query='ecology', from=c('plos','crossref','arxiv')))
res$plos
res <- ft_search(query='ecology', from=c('plos','crossref','arxiv')))
res <- ft_search(query='ecology', from=c('plos','crossref','arxiv'))
res$plos
res$bmc
res$crossref
res$arxiv
res$biorxiv
library(stringr)
s <-  "
Day after day, day after day,
We stuck, nor breath nor motion;
"
s
m <- str_match_all( s, "\\S+" )
m
length(m[[1]])
m <- str_match_all( s, "\\;+" )
m
length(m[[1]])
library("ngram", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
source('~/poldham.github.io/Myjekyllsite.R')
KnitPost("/Users/pauloldham17inch/poldham.github.io/_site/2015-10-27-rplos-walkthrough.Rmd")
getwd()
setwd("/Users/pauloldham17inch/poldham.github.io")
KnitPost("/Users/pauloldham17inch/poldham.github.io/_site/2015-10-27-rplos-walkthrough.Rmd")
getwd()
KnitPost("/Users/pauloldham17inch/poldham.github.io/2015-10-27-rplos-walkthrough.Rmd")
